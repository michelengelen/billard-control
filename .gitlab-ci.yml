stages:
  - prepare
  - deploy

Prepare Node Modules:
  stage: prepare
  image: node:10-alpine
  script:
    - node -v
    - npm -v
    - npm install
  cache:
    key: billard-control-${CI_PIPELINE_ID}
    paths:
      - node_modules/
      - package-lock.json
    policy: push

DEV:
  stage: deploy
  image: node:10-alpine
  dependencies:
    - Prepare Node Modules
  environment:
    name: DEV
    url: https://billard-control-dev.web.app
  variables:
    FIREBASE_APIKEY: ${FIREBASE_APIKEY_PROD}
  before_script:
    - node -v
    - npm -v
    - npm install -g firebase-tools firebase-ci
  script:
    - pwd
    - firebase-ci createConfig --project "dev" --path "./src/variables/constants/config.js"
    - CI=false
    - npm run build
    - firebase use billard-control-dev --token $FIREBASE_TOKEN
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_TOKEN
  cache:
    key: billard-control-${CI_PIPELINE_ID}
    paths:
      - node_modules/
      - package-lock.json
    policy: pull
  only:
    - develop

PROD:
  stage: deploy
  image: node:10-alpine
  dependencies:
    - Prepare Node Modules
  environment:
    name: PROD
    url: https://billard-control.web.app
  variables:
    FIREBASE_APIKEY: ${FIREBASE_APIKEY_DEV}
  before_script:
    - node -v
    - npm -v
    - npm install -g firebase-tools firebase-ci
  script:
    - firebase-ci createConfig --project "prod" --path "src/variables/constants/config.js"
    - CI=false
    - npm run build
    - firebase use billard-control --token $FIREBASE_TOKEN
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_TOKEN
  cache:
    key: billard-control-${CI_PIPELINE_ID}
    paths:
      - node_modules/
      - package-lock.json
    policy: pull
  only:
    - master
